// THIS FILE IS GENERATED (see helper/)

#ifndef Q_CLASSES_H
#define Q_CLASSES_H

#include "_ini.h"
#include "../../ecl_fun.h"
#include "../_lobjects.h"
#include <QtGui>

QT_BEGIN_NAMESPACE

class LHelpContentModel : public QHelpContentModel {
    Q_OBJECT
    friend class Q88;
public:

    static NumList overrideIds;
    uint unique;

    int columnCount(const QModelIndex& x1 = QModelIndex()) const { quint64 id = LObjects::override_id(unique, 55); void* fun = LObjects::overrideFun(id); int ret = 0; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; ret = callOverrideFun(fun, 55, args, id).toInt(); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpContentModel::columnCount(x1); } return ret; }
    QVariant data(const QModelIndex& x1, int x2) const { quint64 id = LObjects::override_id(unique, 56); void* fun = LObjects::overrideFun(id); QVariant ret; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1, &x2 }; ret = qVariantValue<QVariant>(callOverrideFun(fun, 56, args, id)); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpContentModel::data(x1, x2); } return ret; }
    QModelIndex index(int x1, int x2, const QModelIndex& x3 = QModelIndex()) const { quint64 id = LObjects::override_id(unique, 62); void* fun = LObjects::overrideFun(id); QModelIndex ret; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1, &x2, &x3 }; ret = qVariantValue<QModelIndex>(callOverrideFun(fun, 62, args, id)); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpContentModel::index(x1, x2, x3); } return ret; }
    QModelIndex parent(const QModelIndex& x1) const { quint64 id = LObjects::override_id(unique, 68); void* fun = LObjects::overrideFun(id); QModelIndex ret; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; ret = qVariantValue<QModelIndex>(callOverrideFun(fun, 68, args, id)); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpContentModel::parent(x1); } return ret; }
    int rowCount(const QModelIndex& x1 = QModelIndex()) const { quint64 id = LObjects::override_id(unique, 71); void* fun = LObjects::overrideFun(id); int ret = 0; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; ret = callOverrideFun(fun, 71, args, id).toInt(); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpContentModel::rowCount(x1); } return ret; }
    QModelIndex buddy(const QModelIndex& x1) const { quint64 id = LObjects::override_id(unique, 53); void* fun = LObjects::overrideFun(id); QModelIndex ret; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; ret = qVariantValue<QModelIndex>(callOverrideFun(fun, 53, args, id)); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpContentModel::buddy(x1); } return ret; }
    bool canFetchMore(const QModelIndex& x1) const { quint64 id = LObjects::override_id(unique, 54); void* fun = LObjects::overrideFun(id); bool ret = false; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; ret = callOverrideFun(fun, 54, args, id).toBool(); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpContentModel::canFetchMore(x1); } return ret; }
    bool dropMimeData(const QMimeData* x1, Qt::DropAction x2, int x3, int x4, const QModelIndex& x5) { quint64 id = LObjects::override_id(unique, 57); void* fun = LObjects::overrideFun(id); bool ret = false; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1, &x2, &x3, &x4, &x5 }; ret = callOverrideFun(fun, 57, args, id).toBool(); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpContentModel::dropMimeData(x1, x2, x3, x4, x5); } return ret; }
    void fetchMore(const QModelIndex& x1) { quint64 id = LObjects::override_id(unique, 58); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 58, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpContentModel::fetchMore(x1); }}
    Qt::ItemFlags flags(const QModelIndex& x1) const { quint64 id = LObjects::override_id(unique, 59); void* fun = LObjects::overrideFun(id); Qt::ItemFlags ret = (Qt::ItemFlags)0; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; ret = (Qt::ItemFlags)callOverrideFun(fun, 59, args, id).toInt(); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpContentModel::flags(x1); } return ret; }
    bool hasChildren(const QModelIndex& x1 = QModelIndex()) const { quint64 id = LObjects::override_id(unique, 60); void* fun = LObjects::overrideFun(id); bool ret = false; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; ret = callOverrideFun(fun, 60, args, id).toBool(); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpContentModel::hasChildren(x1); } return ret; }
    QVariant headerData(int x1, Qt::Orientation x2, int x3 = Qt::DisplayRole) const { quint64 id = LObjects::override_id(unique, 61); void* fun = LObjects::overrideFun(id); QVariant ret; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1, &x2, &x3 }; ret = qVariantValue<QVariant>(callOverrideFun(fun, 61, args, id)); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpContentModel::headerData(x1, x2, x3); } return ret; }
    bool insertColumns(int x1, int x2, const QModelIndex& x3 = QModelIndex()) { quint64 id = LObjects::override_id(unique, 63); void* fun = LObjects::overrideFun(id); bool ret = false; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1, &x2, &x3 }; ret = callOverrideFun(fun, 63, args, id).toBool(); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpContentModel::insertColumns(x1, x2, x3); } return ret; }
    bool insertRows(int x1, int x2, const QModelIndex& x3 = QModelIndex()) { quint64 id = LObjects::override_id(unique, 64); void* fun = LObjects::overrideFun(id); bool ret = false; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1, &x2, &x3 }; ret = callOverrideFun(fun, 64, args, id).toBool(); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpContentModel::insertRows(x1, x2, x3); } return ret; }
    QModelIndexList match(const QModelIndex& x1, int x2, const QVariant& x3, int x4 = 1, Qt::MatchFlags x5 = Qt::MatchFlags(Qt::MatchStartsWith|Qt::MatchWrap)) const { quint64 id = LObjects::override_id(unique, 65); void* fun = LObjects::overrideFun(id); QModelIndexList ret; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1, &x2, &x3, &x4, &x5 }; ret = qVariantValue<QModelIndexList>(callOverrideFun(fun, 65, args, id)); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpContentModel::match(x1, x2, x3, x4, x5); } return ret; }
    QMimeData* mimeData(const QModelIndexList& x1) const { quint64 id = LObjects::override_id(unique, 66); void* fun = LObjects::overrideFun(id); QMimeData* ret = 0; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; ret = (QMimeData*)qVariantValue<void*>(callOverrideFun(fun, 66, args, id)); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpContentModel::mimeData(x1); } return ret; }
    QStringList mimeTypes() const { quint64 id = LObjects::override_id(unique, 67); void* fun = LObjects::overrideFun(id); QStringList ret; if(fun && (LObjects::calling != id)) { ret = qVariantValue<QStringList>(callOverrideFun(fun, 67, 0, id)); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpContentModel::mimeTypes(); } return ret; }
    bool removeColumns(int x1, int x2, const QModelIndex& x3 = QModelIndex()) { quint64 id = LObjects::override_id(unique, 69); void* fun = LObjects::overrideFun(id); bool ret = false; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1, &x2, &x3 }; ret = callOverrideFun(fun, 69, args, id).toBool(); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpContentModel::removeColumns(x1, x2, x3); } return ret; }
    bool removeRows(int x1, int x2, const QModelIndex& x3 = QModelIndex()) { quint64 id = LObjects::override_id(unique, 70); void* fun = LObjects::overrideFun(id); bool ret = false; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1, &x2, &x3 }; ret = callOverrideFun(fun, 70, args, id).toBool(); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpContentModel::removeRows(x1, x2, x3); } return ret; }
    bool setData(const QModelIndex& x1, const QVariant& x2, int x3 = Qt::EditRole) { quint64 id = LObjects::override_id(unique, 72); void* fun = LObjects::overrideFun(id); bool ret = false; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1, &x2, &x3 }; ret = callOverrideFun(fun, 72, args, id).toBool(); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpContentModel::setData(x1, x2, x3); } return ret; }
    bool setHeaderData(int x1, Qt::Orientation x2, const QVariant& x3, int x4 = Qt::EditRole) { quint64 id = LObjects::override_id(unique, 73); void* fun = LObjects::overrideFun(id); bool ret = false; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1, &x2, &x3, &x4 }; ret = callOverrideFun(fun, 73, args, id).toBool(); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpContentModel::setHeaderData(x1, x2, x3, x4); } return ret; }
    void sort(int x1, Qt::SortOrder x2 = Qt::AscendingOrder) { quint64 id = LObjects::override_id(unique, 74); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1, &x2 }; callOverrideFun(fun, 74, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpContentModel::sort(x1, x2); }}
    QSize span(const QModelIndex& x1) const { quint64 id = LObjects::override_id(unique, 75); void* fun = LObjects::overrideFun(id); QSize ret; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; ret = qVariantValue<QSize>(callOverrideFun(fun, 75, args, id)); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpContentModel::span(x1); } return ret; }
    Qt::DropActions supportedDropActions() const { quint64 id = LObjects::override_id(unique, 76); void* fun = LObjects::overrideFun(id); Qt::DropActions ret = (Qt::DropActions)0; if(fun && (LObjects::calling != id)) { ret = (Qt::DropActions)callOverrideFun(fun, 76, 0, id).toInt(); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpContentModel::supportedDropActions(); } return ret; }
    bool eventFilter(QObject* x1, QEvent* x2) { quint64 id = LObjects::override_id(unique, 5); void* fun = LObjects::overrideFun(id); bool ret = false; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1, &x2 }; ret = callOverrideFun(fun, 5, args, id).toBool(); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpContentModel::eventFilter(x1, x2); } return ret; }
    void childEvent(QChildEvent* x1) { quint64 id = LObjects::override_id(unique, 6); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 6, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpContentModel::childEvent(x1); }}
    void connectNotify(const char* x1) { quint64 id = LObjects::override_id(unique, 7); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 7, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpContentModel::connectNotify(x1); }}
    void customEvent(QEvent* x1) { quint64 id = LObjects::override_id(unique, 8); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 8, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpContentModel::customEvent(x1); }}
    void disconnectNotify(const char* x1) { quint64 id = LObjects::override_id(unique, 9); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 9, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpContentModel::disconnectNotify(x1); }}
    void timerEvent(QTimerEvent* x1) { quint64 id = LObjects::override_id(unique, 10); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 10, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpContentModel::timerEvent(x1); }}
};

class LHelpContentWidget : public QHelpContentWidget {
    Q_OBJECT
    friend class Q89;
public:

    static NumList overrideIds;
    uint unique;

    void drawBranches(QPainter* x1, const QRect& x2, const QModelIndex& x3) const { quint64 id = LObjects::override_id(unique, 253); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1, &x2, &x3 }; callOverrideFun(fun, 253, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpContentWidget::drawBranches(x1, x2, x3); }}
    void drawRow(QPainter* x1, const QStyleOptionViewItem& x2, const QModelIndex& x3) const { quint64 id = LObjects::override_id(unique, 254); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1, &x2, &x3 }; callOverrideFun(fun, 254, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpContentWidget::drawRow(x1, x2, x3); }}
    void dataChanged(const QModelIndex& x1, const QModelIndex& x2) { quint64 id = LObjects::override_id(unique, 255); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1, &x2 }; callOverrideFun(fun, 255, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpContentWidget::dataChanged(x1, x2); }}
    QModelIndex indexAt(const QPoint& x1) const { quint64 id = LObjects::override_id(unique, 77); void* fun = LObjects::overrideFun(id); QModelIndex ret; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; ret = qVariantValue<QModelIndex>(callOverrideFun(fun, 77, args, id)); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpContentWidget::indexAt(x1); } return ret; }
    void keyboardSearch(const QString& x1) { quint64 id = LObjects::override_id(unique, 78); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 78, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpContentWidget::keyboardSearch(x1); }}
    void reset() { quint64 id = LObjects::override_id(unique, 121); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { callOverrideFun(fun, 121, 0, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpContentWidget::reset(); }}
    void scrollTo(const QModelIndex& x1, ScrollHint x2 = EnsureVisible) { quint64 id = LObjects::override_id(unique, 79); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1, &x2 }; callOverrideFun(fun, 79, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpContentWidget::scrollTo(x1, x2); }}
    void selectAll() { quint64 id = LObjects::override_id(unique, 184); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { callOverrideFun(fun, 184, 0, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpContentWidget::selectAll(); }}
    void setModel(QAbstractItemModel* x1) { quint64 id = LObjects::override_id(unique, 80); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 80, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpContentWidget::setModel(x1); }}
    void setRootIndex(const QModelIndex& x1) { quint64 id = LObjects::override_id(unique, 185); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 185, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpContentWidget::setRootIndex(x1); }}
    void setSelectionModel(QItemSelectionModel* x1) { quint64 id = LObjects::override_id(unique, 81); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 81, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpContentWidget::setSelectionModel(x1); }}
    QRect visualRect(const QModelIndex& x1) const { quint64 id = LObjects::override_id(unique, 84); void* fun = LObjects::overrideFun(id); QRect ret; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; ret = qVariantValue<QRect>(callOverrideFun(fun, 84, args, id)); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpContentWidget::visualRect(x1); } return ret; }
    void currentChanged(const QModelIndex& x1, const QModelIndex& x2) { quint64 id = LObjects::override_id(unique, 186); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1, &x2 }; callOverrideFun(fun, 186, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpContentWidget::currentChanged(x1, x2); }}
    void dragMoveEvent(QDragMoveEvent* x1) { quint64 id = LObjects::override_id(unique, 32); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 32, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpContentWidget::dragMoveEvent(x1); }}
    int horizontalOffset() const { quint64 id = LObjects::override_id(unique, 86); void* fun = LObjects::overrideFun(id); int ret = 0; if(fun && (LObjects::calling != id)) { ret = callOverrideFun(fun, 86, 0, id).toInt(); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpContentWidget::horizontalOffset(); } return ret; }
    bool isIndexHidden(const QModelIndex& x1) const { quint64 id = LObjects::override_id(unique, 87); void* fun = LObjects::overrideFun(id); bool ret = false; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; ret = callOverrideFun(fun, 87, args, id).toBool(); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpContentWidget::isIndexHidden(x1); } return ret; }
    void keyPressEvent(QKeyEvent* x1) { quint64 id = LObjects::override_id(unique, 17); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 17, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpContentWidget::keyPressEvent(x1); }}
    void mouseDoubleClickEvent(QMouseEvent* x1) { quint64 id = LObjects::override_id(unique, 39); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 39, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpContentWidget::mouseDoubleClickEvent(x1); }}
    void mouseMoveEvent(QMouseEvent* x1) { quint64 id = LObjects::override_id(unique, 19); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 19, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpContentWidget::mouseMoveEvent(x1); }}
    void mousePressEvent(QMouseEvent* x1) { quint64 id = LObjects::override_id(unique, 20); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 20, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpContentWidget::mousePressEvent(x1); }}
    void mouseReleaseEvent(QMouseEvent* x1) { quint64 id = LObjects::override_id(unique, 21); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 21, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpContentWidget::mouseReleaseEvent(x1); }}
    QModelIndex moveCursor(CursorAction x1, Qt::KeyboardModifiers x2) { quint64 id = LObjects::override_id(unique, 88); void* fun = LObjects::overrideFun(id); QModelIndex ret; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1, &x2 }; ret = qVariantValue<QModelIndex>(callOverrideFun(fun, 88, args, id)); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpContentWidget::moveCursor(x1, x2); } return ret; }
    void paintEvent(QPaintEvent* x1) { quint64 id = LObjects::override_id(unique, 22); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 22, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpContentWidget::paintEvent(x1); }}
    void rowsAboutToBeRemoved(const QModelIndex& x1, int x2, int x3) { quint64 id = LObjects::override_id(unique, 256); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1, &x2, &x3 }; callOverrideFun(fun, 256, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpContentWidget::rowsAboutToBeRemoved(x1, x2, x3); }}
    void rowsInserted(const QModelIndex& x1, int x2, int x3) { quint64 id = LObjects::override_id(unique, 187); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1, &x2, &x3 }; callOverrideFun(fun, 187, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpContentWidget::rowsInserted(x1, x2, x3); }}
    void scrollContentsBy(int x1, int x2) { quint64 id = LObjects::override_id(unique, 97); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1, &x2 }; callOverrideFun(fun, 97, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpContentWidget::scrollContentsBy(x1, x2); }}
    QModelIndexList selectedIndexes() const { quint64 id = LObjects::override_id(unique, 89); void* fun = LObjects::overrideFun(id); QModelIndexList ret; if(fun && (LObjects::calling != id)) { ret = qVariantValue<QModelIndexList>(callOverrideFun(fun, 89, 0, id)); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpContentWidget::selectedIndexes(); } return ret; }
    void selectionChanged(const QItemSelection& x1, const QItemSelection& x2) { quint64 id = LObjects::override_id(unique, 257); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1, &x2 }; callOverrideFun(fun, 257, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpContentWidget::selectionChanged(x1, x2); }}
    void setSelection(const QRect& x1, QItemSelectionModel::SelectionFlags x2) { quint64 id = LObjects::override_id(unique, 91); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1, &x2 }; callOverrideFun(fun, 91, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpContentWidget::setSelection(x1, x2); }}
    int sizeHintForColumn(int x1) const { quint64 id = LObjects::override_id(unique, 82); void* fun = LObjects::overrideFun(id); int ret = 0; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; ret = callOverrideFun(fun, 82, args, id).toInt(); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpContentWidget::sizeHintForColumn(x1); } return ret; }
    void timerEvent(QTimerEvent* x1) { quint64 id = LObjects::override_id(unique, 10); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 10, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpContentWidget::timerEvent(x1); }}
    void updateGeometries() { quint64 id = LObjects::override_id(unique, 258); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { callOverrideFun(fun, 258, 0, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpContentWidget::updateGeometries(); }}
    int verticalOffset() const { quint64 id = LObjects::override_id(unique, 93); void* fun = LObjects::overrideFun(id); int ret = 0; if(fun && (LObjects::calling != id)) { ret = callOverrideFun(fun, 93, 0, id).toInt(); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpContentWidget::verticalOffset(); } return ret; }
    bool viewportEvent(QEvent* x1) { quint64 id = LObjects::override_id(unique, 96); void* fun = LObjects::overrideFun(id); bool ret = false; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; ret = callOverrideFun(fun, 96, args, id).toBool(); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpContentWidget::viewportEvent(x1); } return ret; }
    QRegion visualRegionForSelection(const QItemSelection& x1) const { quint64 id = LObjects::override_id(unique, 95); void* fun = LObjects::overrideFun(id); QRegion ret; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; ret = qVariantValue<QRegion>(callOverrideFun(fun, 95, args, id)); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpContentWidget::visualRegionForSelection(x1); } return ret; }
    int sizeHintForRow(int x1) const { quint64 id = LObjects::override_id(unique, 83); void* fun = LObjects::overrideFun(id); int ret = 0; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; ret = callOverrideFun(fun, 83, args, id).toInt(); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpContentWidget::sizeHintForRow(x1); } return ret; }
    bool edit(const QModelIndex& x1, EditTrigger x2, QEvent* x3) { quint64 id = LObjects::override_id(unique, 85); void* fun = LObjects::overrideFun(id); bool ret = false; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1, &x2, &x3 }; ret = callOverrideFun(fun, 85, args, id).toBool(); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpContentWidget::edit(x1, x2, x3); } return ret; }
    QItemSelectionModel::SelectionFlags selectionCommand(const QModelIndex& x1, const QEvent* x2 = 0) const { quint64 id = LObjects::override_id(unique, 90); void* fun = LObjects::overrideFun(id); QItemSelectionModel::SelectionFlags ret = (QItemSelectionModel::SelectionFlags)0; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1, &x2 }; ret = (QItemSelectionModel::SelectionFlags)callOverrideFun(fun, 90, args, id).toInt(); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpContentWidget::selectionCommand(x1, x2); } return ret; }
    void startDrag(Qt::DropActions x1) { quint64 id = LObjects::override_id(unique, 92); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 92, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpContentWidget::startDrag(x1); }}
    QStyleOptionViewItem viewOptions() const { quint64 id = LObjects::override_id(unique, 94); void* fun = LObjects::overrideFun(id); QStyleOptionViewItem ret; if(fun && (LObjects::calling != id)) { ret = qVariantValue<QStyleOptionViewItem>(callOverrideFun(fun, 94, 0, id)); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpContentWidget::viewOptions(); } return ret; }
    QVariant inputMethodQuery(Qt::InputMethodQuery x1) const { quint64 id = LObjects::override_id(unique, 24); void* fun = LObjects::overrideFun(id); QVariant ret; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; ret = qVariantValue<QVariant>(callOverrideFun(fun, 24, args, id)); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpContentWidget::inputMethodQuery(x1); } return ret; }
    void dragEnterEvent(QDragEnterEvent* x1) { quint64 id = LObjects::override_id(unique, 30); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 30, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpContentWidget::dragEnterEvent(x1); }}
    void dragLeaveEvent(QDragLeaveEvent* x1) { quint64 id = LObjects::override_id(unique, 31); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 31, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpContentWidget::dragLeaveEvent(x1); }}
    void dropEvent(QDropEvent* x1) { quint64 id = LObjects::override_id(unique, 33); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 33, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpContentWidget::dropEvent(x1); }}
    void focusInEvent(QFocusEvent* x1) { quint64 id = LObjects::override_id(unique, 15); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 15, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpContentWidget::focusInEvent(x1); }}
    bool focusNextPrevChild(bool x1) { quint64 id = LObjects::override_id(unique, 35); void* fun = LObjects::overrideFun(id); bool ret = false; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; ret = callOverrideFun(fun, 35, args, id).toBool(); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpContentWidget::focusNextPrevChild(x1); } return ret; }
    void focusOutEvent(QFocusEvent* x1) { quint64 id = LObjects::override_id(unique, 16); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 16, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpContentWidget::focusOutEvent(x1); }}
    void inputMethodEvent(QInputMethodEvent* x1) { quint64 id = LObjects::override_id(unique, 37); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 37, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpContentWidget::inputMethodEvent(x1); }}
    void resizeEvent(QResizeEvent* x1) { quint64 id = LObjects::override_id(unique, 41); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 41, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpContentWidget::resizeEvent(x1); }}
    QSize minimumSizeHint() const { quint64 id = LObjects::override_id(unique, 25); void* fun = LObjects::overrideFun(id); QSize ret; if(fun && (LObjects::calling != id)) { ret = qVariantValue<QSize>(callOverrideFun(fun, 25, 0, id)); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpContentWidget::minimumSizeHint(); } return ret; }
    QSize sizeHint() const { quint64 id = LObjects::override_id(unique, 26); void* fun = LObjects::overrideFun(id); QSize ret; if(fun && (LObjects::calling != id)) { ret = qVariantValue<QSize>(callOverrideFun(fun, 26, 0, id)); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpContentWidget::sizeHint(); } return ret; }
    void contextMenuEvent(QContextMenuEvent* x1) { quint64 id = LObjects::override_id(unique, 29); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 29, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpContentWidget::contextMenuEvent(x1); }}
    void wheelEvent(QWheelEvent* x1) { quint64 id = LObjects::override_id(unique, 44); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 44, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpContentWidget::wheelEvent(x1); }}
    void changeEvent(QEvent* x1) { quint64 id = LObjects::override_id(unique, 14); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 14, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpContentWidget::changeEvent(x1); }}
    int heightForWidth(int x1) const { quint64 id = LObjects::override_id(unique, 23); void* fun = LObjects::overrideFun(id); int ret = 0; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; ret = callOverrideFun(fun, 23, args, id).toInt(); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpContentWidget::heightForWidth(x1); } return ret; }
    void actionEvent(QActionEvent* x1) { quint64 id = LObjects::override_id(unique, 27); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 27, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpContentWidget::actionEvent(x1); }}
    void closeEvent(QCloseEvent* x1) { quint64 id = LObjects::override_id(unique, 28); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 28, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpContentWidget::closeEvent(x1); }}
    void enterEvent(QEvent* x1) { quint64 id = LObjects::override_id(unique, 34); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 34, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpContentWidget::enterEvent(x1); }}
    void hideEvent(QHideEvent* x1) { quint64 id = LObjects::override_id(unique, 36); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 36, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpContentWidget::hideEvent(x1); }}
    void keyReleaseEvent(QKeyEvent* x1) { quint64 id = LObjects::override_id(unique, 18); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 18, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpContentWidget::keyReleaseEvent(x1); }}
    void leaveEvent(QEvent* x1) { quint64 id = LObjects::override_id(unique, 38); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 38, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpContentWidget::leaveEvent(x1); }}
    void moveEvent(QMoveEvent* x1) { quint64 id = LObjects::override_id(unique, 40); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 40, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpContentWidget::moveEvent(x1); }}
    void showEvent(QShowEvent* x1) { quint64 id = LObjects::override_id(unique, 42); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 42, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpContentWidget::showEvent(x1); }}
    void tabletEvent(QTabletEvent* x1) { quint64 id = LObjects::override_id(unique, 43); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 43, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpContentWidget::tabletEvent(x1); }}
    int metric(PaintDeviceMetric x1) const { quint64 id = LObjects::override_id(unique, 45); void* fun = LObjects::overrideFun(id); int ret = 0; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; ret = callOverrideFun(fun, 45, args, id).toInt(); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpContentWidget::metric(x1); } return ret; }
    bool eventFilter(QObject* x1, QEvent* x2) { quint64 id = LObjects::override_id(unique, 5); void* fun = LObjects::overrideFun(id); bool ret = false; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1, &x2 }; ret = callOverrideFun(fun, 5, args, id).toBool(); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpContentWidget::eventFilter(x1, x2); } return ret; }
    void childEvent(QChildEvent* x1) { quint64 id = LObjects::override_id(unique, 6); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 6, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpContentWidget::childEvent(x1); }}
    void connectNotify(const char* x1) { quint64 id = LObjects::override_id(unique, 7); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 7, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpContentWidget::connectNotify(x1); }}
    void customEvent(QEvent* x1) { quint64 id = LObjects::override_id(unique, 8); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 8, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpContentWidget::customEvent(x1); }}
    void disconnectNotify(const char* x1) { quint64 id = LObjects::override_id(unique, 9); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 9, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpContentWidget::disconnectNotify(x1); }}
};

class LHelpEngineCore : public QHelpEngineCore {
    Q_OBJECT
    friend class Q90;
public:

    static NumList overrideIds;
    uint unique;

    bool eventFilter(QObject* x1, QEvent* x2) { quint64 id = LObjects::override_id(unique, 5); void* fun = LObjects::overrideFun(id); bool ret = false; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1, &x2 }; ret = callOverrideFun(fun, 5, args, id).toBool(); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpEngineCore::eventFilter(x1, x2); } return ret; }
    void childEvent(QChildEvent* x1) { quint64 id = LObjects::override_id(unique, 6); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 6, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpEngineCore::childEvent(x1); }}
    void connectNotify(const char* x1) { quint64 id = LObjects::override_id(unique, 7); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 7, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpEngineCore::connectNotify(x1); }}
    void customEvent(QEvent* x1) { quint64 id = LObjects::override_id(unique, 8); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 8, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpEngineCore::customEvent(x1); }}
    void disconnectNotify(const char* x1) { quint64 id = LObjects::override_id(unique, 9); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 9, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpEngineCore::disconnectNotify(x1); }}
    void timerEvent(QTimerEvent* x1) { quint64 id = LObjects::override_id(unique, 10); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 10, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpEngineCore::timerEvent(x1); }}
};

class LHelpIndexWidget : public QHelpIndexWidget {
    Q_OBJECT
    friend class Q92;
public:

    static NumList overrideIds;
    uint unique;

    QModelIndex indexAt(const QPoint& x1) const { quint64 id = LObjects::override_id(unique, 77); void* fun = LObjects::overrideFun(id); QModelIndex ret; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; ret = qVariantValue<QModelIndex>(callOverrideFun(fun, 77, args, id)); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpIndexWidget::indexAt(x1); } return ret; }
    void scrollTo(const QModelIndex& x1, ScrollHint x2 = EnsureVisible) { quint64 id = LObjects::override_id(unique, 79); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1, &x2 }; callOverrideFun(fun, 79, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpIndexWidget::scrollTo(x1, x2); }}
    QRect visualRect(const QModelIndex& x1) const { quint64 id = LObjects::override_id(unique, 84); void* fun = LObjects::overrideFun(id); QRect ret; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; ret = qVariantValue<QRect>(callOverrideFun(fun, 84, args, id)); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpIndexWidget::visualRect(x1); } return ret; }
    void currentChanged(const QModelIndex& x1, const QModelIndex& x2) { quint64 id = LObjects::override_id(unique, 186); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1, &x2 }; callOverrideFun(fun, 186, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpIndexWidget::currentChanged(x1, x2); }}
    void dataChanged(const QModelIndex& x1, const QModelIndex& x2) { quint64 id = LObjects::override_id(unique, 255); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1, &x2 }; callOverrideFun(fun, 255, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpIndexWidget::dataChanged(x1, x2); }}
    void dragLeaveEvent(QDragLeaveEvent* x1) { quint64 id = LObjects::override_id(unique, 31); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 31, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpIndexWidget::dragLeaveEvent(x1); }}
    void dragMoveEvent(QDragMoveEvent* x1) { quint64 id = LObjects::override_id(unique, 32); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 32, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpIndexWidget::dragMoveEvent(x1); }}
    void dropEvent(QDropEvent* x1) { quint64 id = LObjects::override_id(unique, 33); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 33, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpIndexWidget::dropEvent(x1); }}
    int horizontalOffset() const { quint64 id = LObjects::override_id(unique, 86); void* fun = LObjects::overrideFun(id); int ret = 0; if(fun && (LObjects::calling != id)) { ret = callOverrideFun(fun, 86, 0, id).toInt(); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpIndexWidget::horizontalOffset(); } return ret; }
    bool isIndexHidden(const QModelIndex& x1) const { quint64 id = LObjects::override_id(unique, 87); void* fun = LObjects::overrideFun(id); bool ret = false; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; ret = callOverrideFun(fun, 87, args, id).toBool(); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpIndexWidget::isIndexHidden(x1); } return ret; }
    void mouseMoveEvent(QMouseEvent* x1) { quint64 id = LObjects::override_id(unique, 19); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 19, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpIndexWidget::mouseMoveEvent(x1); }}
    void mouseReleaseEvent(QMouseEvent* x1) { quint64 id = LObjects::override_id(unique, 21); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 21, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpIndexWidget::mouseReleaseEvent(x1); }}
    QModelIndex moveCursor(CursorAction x1, Qt::KeyboardModifiers x2) { quint64 id = LObjects::override_id(unique, 88); void* fun = LObjects::overrideFun(id); QModelIndex ret; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1, &x2 }; ret = qVariantValue<QModelIndex>(callOverrideFun(fun, 88, args, id)); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpIndexWidget::moveCursor(x1, x2); } return ret; }
    void paintEvent(QPaintEvent* x1) { quint64 id = LObjects::override_id(unique, 22); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 22, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpIndexWidget::paintEvent(x1); }}
    void resizeEvent(QResizeEvent* x1) { quint64 id = LObjects::override_id(unique, 41); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 41, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpIndexWidget::resizeEvent(x1); }}
    void rowsAboutToBeRemoved(const QModelIndex& x1, int x2, int x3) { quint64 id = LObjects::override_id(unique, 256); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1, &x2, &x3 }; callOverrideFun(fun, 256, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpIndexWidget::rowsAboutToBeRemoved(x1, x2, x3); }}
    void rowsInserted(const QModelIndex& x1, int x2, int x3) { quint64 id = LObjects::override_id(unique, 187); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1, &x2, &x3 }; callOverrideFun(fun, 187, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpIndexWidget::rowsInserted(x1, x2, x3); }}
    QModelIndexList selectedIndexes() const { quint64 id = LObjects::override_id(unique, 89); void* fun = LObjects::overrideFun(id); QModelIndexList ret; if(fun && (LObjects::calling != id)) { ret = qVariantValue<QModelIndexList>(callOverrideFun(fun, 89, 0, id)); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpIndexWidget::selectedIndexes(); } return ret; }
    void selectionChanged(const QItemSelection& x1, const QItemSelection& x2) { quint64 id = LObjects::override_id(unique, 257); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1, &x2 }; callOverrideFun(fun, 257, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpIndexWidget::selectionChanged(x1, x2); }}
    void setSelection(const QRect& x1, QItemSelectionModel::SelectionFlags x2) { quint64 id = LObjects::override_id(unique, 91); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1, &x2 }; callOverrideFun(fun, 91, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpIndexWidget::setSelection(x1, x2); }}
    void startDrag(Qt::DropActions x1) { quint64 id = LObjects::override_id(unique, 92); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 92, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpIndexWidget::startDrag(x1); }}
    void timerEvent(QTimerEvent* x1) { quint64 id = LObjects::override_id(unique, 10); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 10, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpIndexWidget::timerEvent(x1); }}
    void updateGeometries() { quint64 id = LObjects::override_id(unique, 258); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { callOverrideFun(fun, 258, 0, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpIndexWidget::updateGeometries(); }}
    int verticalOffset() const { quint64 id = LObjects::override_id(unique, 93); void* fun = LObjects::overrideFun(id); int ret = 0; if(fun && (LObjects::calling != id)) { ret = callOverrideFun(fun, 93, 0, id).toInt(); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpIndexWidget::verticalOffset(); } return ret; }
    QStyleOptionViewItem viewOptions() const { quint64 id = LObjects::override_id(unique, 94); void* fun = LObjects::overrideFun(id); QStyleOptionViewItem ret; if(fun && (LObjects::calling != id)) { ret = qVariantValue<QStyleOptionViewItem>(callOverrideFun(fun, 94, 0, id)); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpIndexWidget::viewOptions(); } return ret; }
    QRegion visualRegionForSelection(const QItemSelection& x1) const { quint64 id = LObjects::override_id(unique, 95); void* fun = LObjects::overrideFun(id); QRegion ret; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; ret = qVariantValue<QRegion>(callOverrideFun(fun, 95, args, id)); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpIndexWidget::visualRegionForSelection(x1); } return ret; }
    void keyboardSearch(const QString& x1) { quint64 id = LObjects::override_id(unique, 78); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 78, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpIndexWidget::keyboardSearch(x1); }}
    void setModel(QAbstractItemModel* x1) { quint64 id = LObjects::override_id(unique, 80); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 80, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpIndexWidget::setModel(x1); }}
    void setSelectionModel(QItemSelectionModel* x1) { quint64 id = LObjects::override_id(unique, 81); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 81, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpIndexWidget::setSelectionModel(x1); }}
    int sizeHintForColumn(int x1) const { quint64 id = LObjects::override_id(unique, 82); void* fun = LObjects::overrideFun(id); int ret = 0; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; ret = callOverrideFun(fun, 82, args, id).toInt(); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpIndexWidget::sizeHintForColumn(x1); } return ret; }
    int sizeHintForRow(int x1) const { quint64 id = LObjects::override_id(unique, 83); void* fun = LObjects::overrideFun(id); int ret = 0; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; ret = callOverrideFun(fun, 83, args, id).toInt(); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpIndexWidget::sizeHintForRow(x1); } return ret; }
    bool edit(const QModelIndex& x1, EditTrigger x2, QEvent* x3) { quint64 id = LObjects::override_id(unique, 85); void* fun = LObjects::overrideFun(id); bool ret = false; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1, &x2, &x3 }; ret = callOverrideFun(fun, 85, args, id).toBool(); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpIndexWidget::edit(x1, x2, x3); } return ret; }
    QItemSelectionModel::SelectionFlags selectionCommand(const QModelIndex& x1, const QEvent* x2 = 0) const { quint64 id = LObjects::override_id(unique, 90); void* fun = LObjects::overrideFun(id); QItemSelectionModel::SelectionFlags ret = (QItemSelectionModel::SelectionFlags)0; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1, &x2 }; ret = (QItemSelectionModel::SelectionFlags)callOverrideFun(fun, 90, args, id).toInt(); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpIndexWidget::selectionCommand(x1, x2); } return ret; }
    QVariant inputMethodQuery(Qt::InputMethodQuery x1) const { quint64 id = LObjects::override_id(unique, 24); void* fun = LObjects::overrideFun(id); QVariant ret; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; ret = qVariantValue<QVariant>(callOverrideFun(fun, 24, args, id)); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpIndexWidget::inputMethodQuery(x1); } return ret; }
    void dragEnterEvent(QDragEnterEvent* x1) { quint64 id = LObjects::override_id(unique, 30); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 30, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpIndexWidget::dragEnterEvent(x1); }}
    void focusInEvent(QFocusEvent* x1) { quint64 id = LObjects::override_id(unique, 15); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 15, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpIndexWidget::focusInEvent(x1); }}
    bool focusNextPrevChild(bool x1) { quint64 id = LObjects::override_id(unique, 35); void* fun = LObjects::overrideFun(id); bool ret = false; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; ret = callOverrideFun(fun, 35, args, id).toBool(); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpIndexWidget::focusNextPrevChild(x1); } return ret; }
    void focusOutEvent(QFocusEvent* x1) { quint64 id = LObjects::override_id(unique, 16); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 16, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpIndexWidget::focusOutEvent(x1); }}
    void inputMethodEvent(QInputMethodEvent* x1) { quint64 id = LObjects::override_id(unique, 37); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 37, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpIndexWidget::inputMethodEvent(x1); }}
    void keyPressEvent(QKeyEvent* x1) { quint64 id = LObjects::override_id(unique, 17); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 17, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpIndexWidget::keyPressEvent(x1); }}
    void mouseDoubleClickEvent(QMouseEvent* x1) { quint64 id = LObjects::override_id(unique, 39); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 39, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpIndexWidget::mouseDoubleClickEvent(x1); }}
    void mousePressEvent(QMouseEvent* x1) { quint64 id = LObjects::override_id(unique, 20); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 20, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpIndexWidget::mousePressEvent(x1); }}
    bool viewportEvent(QEvent* x1) { quint64 id = LObjects::override_id(unique, 96); void* fun = LObjects::overrideFun(id); bool ret = false; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; ret = callOverrideFun(fun, 96, args, id).toBool(); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpIndexWidget::viewportEvent(x1); } return ret; }
    void scrollContentsBy(int x1, int x2) { quint64 id = LObjects::override_id(unique, 97); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1, &x2 }; callOverrideFun(fun, 97, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpIndexWidget::scrollContentsBy(x1, x2); }}
    QSize minimumSizeHint() const { quint64 id = LObjects::override_id(unique, 25); void* fun = LObjects::overrideFun(id); QSize ret; if(fun && (LObjects::calling != id)) { ret = qVariantValue<QSize>(callOverrideFun(fun, 25, 0, id)); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpIndexWidget::minimumSizeHint(); } return ret; }
    QSize sizeHint() const { quint64 id = LObjects::override_id(unique, 26); void* fun = LObjects::overrideFun(id); QSize ret; if(fun && (LObjects::calling != id)) { ret = qVariantValue<QSize>(callOverrideFun(fun, 26, 0, id)); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpIndexWidget::sizeHint(); } return ret; }
    void contextMenuEvent(QContextMenuEvent* x1) { quint64 id = LObjects::override_id(unique, 29); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 29, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpIndexWidget::contextMenuEvent(x1); }}
    void wheelEvent(QWheelEvent* x1) { quint64 id = LObjects::override_id(unique, 44); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 44, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpIndexWidget::wheelEvent(x1); }}
    void changeEvent(QEvent* x1) { quint64 id = LObjects::override_id(unique, 14); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 14, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpIndexWidget::changeEvent(x1); }}
    int heightForWidth(int x1) const { quint64 id = LObjects::override_id(unique, 23); void* fun = LObjects::overrideFun(id); int ret = 0; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; ret = callOverrideFun(fun, 23, args, id).toInt(); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpIndexWidget::heightForWidth(x1); } return ret; }
    void actionEvent(QActionEvent* x1) { quint64 id = LObjects::override_id(unique, 27); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 27, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpIndexWidget::actionEvent(x1); }}
    void closeEvent(QCloseEvent* x1) { quint64 id = LObjects::override_id(unique, 28); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 28, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpIndexWidget::closeEvent(x1); }}
    void enterEvent(QEvent* x1) { quint64 id = LObjects::override_id(unique, 34); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 34, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpIndexWidget::enterEvent(x1); }}
    void hideEvent(QHideEvent* x1) { quint64 id = LObjects::override_id(unique, 36); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 36, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpIndexWidget::hideEvent(x1); }}
    void keyReleaseEvent(QKeyEvent* x1) { quint64 id = LObjects::override_id(unique, 18); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 18, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpIndexWidget::keyReleaseEvent(x1); }}
    void leaveEvent(QEvent* x1) { quint64 id = LObjects::override_id(unique, 38); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 38, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpIndexWidget::leaveEvent(x1); }}
    void moveEvent(QMoveEvent* x1) { quint64 id = LObjects::override_id(unique, 40); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 40, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpIndexWidget::moveEvent(x1); }}
    void showEvent(QShowEvent* x1) { quint64 id = LObjects::override_id(unique, 42); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 42, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpIndexWidget::showEvent(x1); }}
    void tabletEvent(QTabletEvent* x1) { quint64 id = LObjects::override_id(unique, 43); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 43, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpIndexWidget::tabletEvent(x1); }}
    int metric(PaintDeviceMetric x1) const { quint64 id = LObjects::override_id(unique, 45); void* fun = LObjects::overrideFun(id); int ret = 0; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; ret = callOverrideFun(fun, 45, args, id).toInt(); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpIndexWidget::metric(x1); } return ret; }
    bool eventFilter(QObject* x1, QEvent* x2) { quint64 id = LObjects::override_id(unique, 5); void* fun = LObjects::overrideFun(id); bool ret = false; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1, &x2 }; ret = callOverrideFun(fun, 5, args, id).toBool(); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpIndexWidget::eventFilter(x1, x2); } return ret; }
    void childEvent(QChildEvent* x1) { quint64 id = LObjects::override_id(unique, 6); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 6, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpIndexWidget::childEvent(x1); }}
    void connectNotify(const char* x1) { quint64 id = LObjects::override_id(unique, 7); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 7, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpIndexWidget::connectNotify(x1); }}
    void customEvent(QEvent* x1) { quint64 id = LObjects::override_id(unique, 8); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 8, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpIndexWidget::customEvent(x1); }}
    void disconnectNotify(const char* x1) { quint64 id = LObjects::override_id(unique, 9); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 9, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpIndexWidget::disconnectNotify(x1); }}
};

class LHelpSearchEngine : public QHelpSearchEngine {
    Q_OBJECT
    friend class Q93;
public:

    static NumList overrideIds;
    uint unique;

    bool eventFilter(QObject* x1, QEvent* x2) { quint64 id = LObjects::override_id(unique, 5); void* fun = LObjects::overrideFun(id); bool ret = false; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1, &x2 }; ret = callOverrideFun(fun, 5, args, id).toBool(); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpSearchEngine::eventFilter(x1, x2); } return ret; }
    void childEvent(QChildEvent* x1) { quint64 id = LObjects::override_id(unique, 6); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 6, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchEngine::childEvent(x1); }}
    void connectNotify(const char* x1) { quint64 id = LObjects::override_id(unique, 7); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 7, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchEngine::connectNotify(x1); }}
    void customEvent(QEvent* x1) { quint64 id = LObjects::override_id(unique, 8); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 8, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchEngine::customEvent(x1); }}
    void disconnectNotify(const char* x1) { quint64 id = LObjects::override_id(unique, 9); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 9, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchEngine::disconnectNotify(x1); }}
    void timerEvent(QTimerEvent* x1) { quint64 id = LObjects::override_id(unique, 10); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 10, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchEngine::timerEvent(x1); }}
};

class LHelpSearchQueryWidget : public QHelpSearchQueryWidget {
    Q_OBJECT
    friend class Q94;
public:
    LHelpSearchQueryWidget(uint u, QWidget* x1 = 0) : QHelpSearchQueryWidget(x1), unique(u) {}

    static NumList overrideIds;
    uint unique;

    int heightForWidth(int x1) const { quint64 id = LObjects::override_id(unique, 23); void* fun = LObjects::overrideFun(id); int ret = 0; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; ret = callOverrideFun(fun, 23, args, id).toInt(); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpSearchQueryWidget::heightForWidth(x1); } return ret; }
    QVariant inputMethodQuery(Qt::InputMethodQuery x1) const { quint64 id = LObjects::override_id(unique, 24); void* fun = LObjects::overrideFun(id); QVariant ret; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; ret = qVariantValue<QVariant>(callOverrideFun(fun, 24, args, id)); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpSearchQueryWidget::inputMethodQuery(x1); } return ret; }
    QSize minimumSizeHint() const { quint64 id = LObjects::override_id(unique, 25); void* fun = LObjects::overrideFun(id); QSize ret; if(fun && (LObjects::calling != id)) { ret = qVariantValue<QSize>(callOverrideFun(fun, 25, 0, id)); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpSearchQueryWidget::minimumSizeHint(); } return ret; }
    QSize sizeHint() const { quint64 id = LObjects::override_id(unique, 26); void* fun = LObjects::overrideFun(id); QSize ret; if(fun && (LObjects::calling != id)) { ret = qVariantValue<QSize>(callOverrideFun(fun, 26, 0, id)); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpSearchQueryWidget::sizeHint(); } return ret; }
    void actionEvent(QActionEvent* x1) { quint64 id = LObjects::override_id(unique, 27); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 27, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchQueryWidget::actionEvent(x1); }}
    void closeEvent(QCloseEvent* x1) { quint64 id = LObjects::override_id(unique, 28); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 28, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchQueryWidget::closeEvent(x1); }}
    void contextMenuEvent(QContextMenuEvent* x1) { quint64 id = LObjects::override_id(unique, 29); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 29, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchQueryWidget::contextMenuEvent(x1); }}
    void dragEnterEvent(QDragEnterEvent* x1) { quint64 id = LObjects::override_id(unique, 30); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 30, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchQueryWidget::dragEnterEvent(x1); }}
    void dragLeaveEvent(QDragLeaveEvent* x1) { quint64 id = LObjects::override_id(unique, 31); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 31, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchQueryWidget::dragLeaveEvent(x1); }}
    void dragMoveEvent(QDragMoveEvent* x1) { quint64 id = LObjects::override_id(unique, 32); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 32, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchQueryWidget::dragMoveEvent(x1); }}
    void dropEvent(QDropEvent* x1) { quint64 id = LObjects::override_id(unique, 33); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 33, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchQueryWidget::dropEvent(x1); }}
    void enterEvent(QEvent* x1) { quint64 id = LObjects::override_id(unique, 34); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 34, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchQueryWidget::enterEvent(x1); }}
    bool focusNextPrevChild(bool x1) { quint64 id = LObjects::override_id(unique, 35); void* fun = LObjects::overrideFun(id); bool ret = false; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; ret = callOverrideFun(fun, 35, args, id).toBool(); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpSearchQueryWidget::focusNextPrevChild(x1); } return ret; }
    void focusOutEvent(QFocusEvent* x1) { quint64 id = LObjects::override_id(unique, 16); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 16, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchQueryWidget::focusOutEvent(x1); }}
    void hideEvent(QHideEvent* x1) { quint64 id = LObjects::override_id(unique, 36); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 36, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchQueryWidget::hideEvent(x1); }}
    void inputMethodEvent(QInputMethodEvent* x1) { quint64 id = LObjects::override_id(unique, 37); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 37, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchQueryWidget::inputMethodEvent(x1); }}
    void keyPressEvent(QKeyEvent* x1) { quint64 id = LObjects::override_id(unique, 17); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 17, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchQueryWidget::keyPressEvent(x1); }}
    void keyReleaseEvent(QKeyEvent* x1) { quint64 id = LObjects::override_id(unique, 18); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 18, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchQueryWidget::keyReleaseEvent(x1); }}
    void leaveEvent(QEvent* x1) { quint64 id = LObjects::override_id(unique, 38); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 38, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchQueryWidget::leaveEvent(x1); }}
    void mouseDoubleClickEvent(QMouseEvent* x1) { quint64 id = LObjects::override_id(unique, 39); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 39, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchQueryWidget::mouseDoubleClickEvent(x1); }}
    void mouseMoveEvent(QMouseEvent* x1) { quint64 id = LObjects::override_id(unique, 19); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 19, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchQueryWidget::mouseMoveEvent(x1); }}
    void mousePressEvent(QMouseEvent* x1) { quint64 id = LObjects::override_id(unique, 20); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 20, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchQueryWidget::mousePressEvent(x1); }}
    void mouseReleaseEvent(QMouseEvent* x1) { quint64 id = LObjects::override_id(unique, 21); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 21, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchQueryWidget::mouseReleaseEvent(x1); }}
    void moveEvent(QMoveEvent* x1) { quint64 id = LObjects::override_id(unique, 40); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 40, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchQueryWidget::moveEvent(x1); }}
    void paintEvent(QPaintEvent* x1) { quint64 id = LObjects::override_id(unique, 22); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 22, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchQueryWidget::paintEvent(x1); }}
    void resizeEvent(QResizeEvent* x1) { quint64 id = LObjects::override_id(unique, 41); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 41, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchQueryWidget::resizeEvent(x1); }}
    void showEvent(QShowEvent* x1) { quint64 id = LObjects::override_id(unique, 42); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 42, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchQueryWidget::showEvent(x1); }}
    void tabletEvent(QTabletEvent* x1) { quint64 id = LObjects::override_id(unique, 43); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 43, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchQueryWidget::tabletEvent(x1); }}
    void wheelEvent(QWheelEvent* x1) { quint64 id = LObjects::override_id(unique, 44); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 44, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchQueryWidget::wheelEvent(x1); }}
    int metric(PaintDeviceMetric x1) const { quint64 id = LObjects::override_id(unique, 45); void* fun = LObjects::overrideFun(id); int ret = 0; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; ret = callOverrideFun(fun, 45, args, id).toInt(); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpSearchQueryWidget::metric(x1); } return ret; }
    bool eventFilter(QObject* x1, QEvent* x2) { quint64 id = LObjects::override_id(unique, 5); void* fun = LObjects::overrideFun(id); bool ret = false; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1, &x2 }; ret = callOverrideFun(fun, 5, args, id).toBool(); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpSearchQueryWidget::eventFilter(x1, x2); } return ret; }
    void childEvent(QChildEvent* x1) { quint64 id = LObjects::override_id(unique, 6); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 6, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchQueryWidget::childEvent(x1); }}
    void connectNotify(const char* x1) { quint64 id = LObjects::override_id(unique, 7); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 7, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchQueryWidget::connectNotify(x1); }}
    void customEvent(QEvent* x1) { quint64 id = LObjects::override_id(unique, 8); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 8, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchQueryWidget::customEvent(x1); }}
    void disconnectNotify(const char* x1) { quint64 id = LObjects::override_id(unique, 9); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 9, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchQueryWidget::disconnectNotify(x1); }}
    void timerEvent(QTimerEvent* x1) { quint64 id = LObjects::override_id(unique, 10); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 10, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchQueryWidget::timerEvent(x1); }}
};

class LHelpSearchResultWidget : public QHelpSearchResultWidget {
    Q_OBJECT
    friend class Q95;
public:

    static NumList overrideIds;
    uint unique;

    int heightForWidth(int x1) const { quint64 id = LObjects::override_id(unique, 23); void* fun = LObjects::overrideFun(id); int ret = 0; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; ret = callOverrideFun(fun, 23, args, id).toInt(); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpSearchResultWidget::heightForWidth(x1); } return ret; }
    QVariant inputMethodQuery(Qt::InputMethodQuery x1) const { quint64 id = LObjects::override_id(unique, 24); void* fun = LObjects::overrideFun(id); QVariant ret; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; ret = qVariantValue<QVariant>(callOverrideFun(fun, 24, args, id)); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpSearchResultWidget::inputMethodQuery(x1); } return ret; }
    QSize minimumSizeHint() const { quint64 id = LObjects::override_id(unique, 25); void* fun = LObjects::overrideFun(id); QSize ret; if(fun && (LObjects::calling != id)) { ret = qVariantValue<QSize>(callOverrideFun(fun, 25, 0, id)); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpSearchResultWidget::minimumSizeHint(); } return ret; }
    QSize sizeHint() const { quint64 id = LObjects::override_id(unique, 26); void* fun = LObjects::overrideFun(id); QSize ret; if(fun && (LObjects::calling != id)) { ret = qVariantValue<QSize>(callOverrideFun(fun, 26, 0, id)); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpSearchResultWidget::sizeHint(); } return ret; }
    void actionEvent(QActionEvent* x1) { quint64 id = LObjects::override_id(unique, 27); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 27, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchResultWidget::actionEvent(x1); }}
    void closeEvent(QCloseEvent* x1) { quint64 id = LObjects::override_id(unique, 28); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 28, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchResultWidget::closeEvent(x1); }}
    void contextMenuEvent(QContextMenuEvent* x1) { quint64 id = LObjects::override_id(unique, 29); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 29, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchResultWidget::contextMenuEvent(x1); }}
    void dragEnterEvent(QDragEnterEvent* x1) { quint64 id = LObjects::override_id(unique, 30); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 30, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchResultWidget::dragEnterEvent(x1); }}
    void dragLeaveEvent(QDragLeaveEvent* x1) { quint64 id = LObjects::override_id(unique, 31); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 31, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchResultWidget::dragLeaveEvent(x1); }}
    void dragMoveEvent(QDragMoveEvent* x1) { quint64 id = LObjects::override_id(unique, 32); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 32, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchResultWidget::dragMoveEvent(x1); }}
    void dropEvent(QDropEvent* x1) { quint64 id = LObjects::override_id(unique, 33); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 33, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchResultWidget::dropEvent(x1); }}
    void enterEvent(QEvent* x1) { quint64 id = LObjects::override_id(unique, 34); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 34, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchResultWidget::enterEvent(x1); }}
    void focusInEvent(QFocusEvent* x1) { quint64 id = LObjects::override_id(unique, 15); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 15, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchResultWidget::focusInEvent(x1); }}
    bool focusNextPrevChild(bool x1) { quint64 id = LObjects::override_id(unique, 35); void* fun = LObjects::overrideFun(id); bool ret = false; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; ret = callOverrideFun(fun, 35, args, id).toBool(); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpSearchResultWidget::focusNextPrevChild(x1); } return ret; }
    void focusOutEvent(QFocusEvent* x1) { quint64 id = LObjects::override_id(unique, 16); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 16, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchResultWidget::focusOutEvent(x1); }}
    void hideEvent(QHideEvent* x1) { quint64 id = LObjects::override_id(unique, 36); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 36, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchResultWidget::hideEvent(x1); }}
    void inputMethodEvent(QInputMethodEvent* x1) { quint64 id = LObjects::override_id(unique, 37); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 37, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchResultWidget::inputMethodEvent(x1); }}
    void keyPressEvent(QKeyEvent* x1) { quint64 id = LObjects::override_id(unique, 17); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 17, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchResultWidget::keyPressEvent(x1); }}
    void keyReleaseEvent(QKeyEvent* x1) { quint64 id = LObjects::override_id(unique, 18); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 18, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchResultWidget::keyReleaseEvent(x1); }}
    void leaveEvent(QEvent* x1) { quint64 id = LObjects::override_id(unique, 38); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 38, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchResultWidget::leaveEvent(x1); }}
    void mouseDoubleClickEvent(QMouseEvent* x1) { quint64 id = LObjects::override_id(unique, 39); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 39, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchResultWidget::mouseDoubleClickEvent(x1); }}
    void mouseMoveEvent(QMouseEvent* x1) { quint64 id = LObjects::override_id(unique, 19); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 19, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchResultWidget::mouseMoveEvent(x1); }}
    void mousePressEvent(QMouseEvent* x1) { quint64 id = LObjects::override_id(unique, 20); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 20, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchResultWidget::mousePressEvent(x1); }}
    void mouseReleaseEvent(QMouseEvent* x1) { quint64 id = LObjects::override_id(unique, 21); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 21, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchResultWidget::mouseReleaseEvent(x1); }}
    void moveEvent(QMoveEvent* x1) { quint64 id = LObjects::override_id(unique, 40); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 40, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchResultWidget::moveEvent(x1); }}
    void paintEvent(QPaintEvent* x1) { quint64 id = LObjects::override_id(unique, 22); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 22, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchResultWidget::paintEvent(x1); }}
    void resizeEvent(QResizeEvent* x1) { quint64 id = LObjects::override_id(unique, 41); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 41, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchResultWidget::resizeEvent(x1); }}
    void showEvent(QShowEvent* x1) { quint64 id = LObjects::override_id(unique, 42); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 42, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchResultWidget::showEvent(x1); }}
    void tabletEvent(QTabletEvent* x1) { quint64 id = LObjects::override_id(unique, 43); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 43, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchResultWidget::tabletEvent(x1); }}
    void wheelEvent(QWheelEvent* x1) { quint64 id = LObjects::override_id(unique, 44); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 44, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchResultWidget::wheelEvent(x1); }}
    int metric(PaintDeviceMetric x1) const { quint64 id = LObjects::override_id(unique, 45); void* fun = LObjects::overrideFun(id); int ret = 0; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; ret = callOverrideFun(fun, 45, args, id).toInt(); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpSearchResultWidget::metric(x1); } return ret; }
    bool eventFilter(QObject* x1, QEvent* x2) { quint64 id = LObjects::override_id(unique, 5); void* fun = LObjects::overrideFun(id); bool ret = false; if(fun && (LObjects::calling != id)) { const void* args[] = { &x1, &x2 }; ret = callOverrideFun(fun, 5, args, id).toBool(); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { ret = QHelpSearchResultWidget::eventFilter(x1, x2); } return ret; }
    void childEvent(QChildEvent* x1) { quint64 id = LObjects::override_id(unique, 6); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 6, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchResultWidget::childEvent(x1); }}
    void connectNotify(const char* x1) { quint64 id = LObjects::override_id(unique, 7); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 7, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchResultWidget::connectNotify(x1); }}
    void customEvent(QEvent* x1) { quint64 id = LObjects::override_id(unique, 8); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 8, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchResultWidget::customEvent(x1); }}
    void disconnectNotify(const char* x1) { quint64 id = LObjects::override_id(unique, 9); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 9, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchResultWidget::disconnectNotify(x1); }}
    void timerEvent(QTimerEvent* x1) { quint64 id = LObjects::override_id(unique, 10); void* fun = LObjects::overrideFun(id); if(fun && (LObjects::calling != id)) { const void* args[] = { &x1 }; callOverrideFun(fun, 10, args, id); } if(!fun || LObjects::call_default || (LObjects::calling == id)) { QHelpSearchResultWidget::timerEvent(x1); }}
};

QT_END_NAMESPACE

#endif
