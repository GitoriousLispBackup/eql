<html>
<head>
<link rel="stylesheet" href="style.css" type="text/css">
</head>
<body>
<h2>Notes</h2>
<p>For the current version number, please visit:
<a href="http://gitorious.org/eql/eql/blobs/master/src/eql.cpp"
   target="_blank"><code>EQL::version</code></a> at line 10.</p>
<p>To run a Lisp file directly, do e.g. <code>eql
    examples/5-colliding-mice.lisp</code>.</p>
<p>See the EQL UI (command <code>eql -qgui</code>) for a complete list of all
  supported classes and functions.</p>
<p>In the above mentioned UI you find a "<b>Select</b>" button, allowing you
  to select any Qt widget (even in other main widgets), if previously loaded
  from the UI command line. After selecting a widget, the
  parameter <code>gui:*q*</code> will be set to it.</p>
<p>If you want to use temporary Qt objects, you can use the <code>qlet</code>
  convenience macro (see the function list). It's a <code>let*</code> variant
  for Qt objects, deleting them  when leaving its body.</p>
<p>No universal GC (garbage collection) for Qt objects:
<ul>
<li>Qt widgets always live inside an object hierarchy, so deleting a widget
  will delete all its child widgets/objects.
<li>For local widgets/objects, you have the <code>qlet</code> macro, which are
  deleted when leaving the <code>qlet</code> body.
</ul>
<ul>
<li>So, always use <code>qlet</code> (instead of <code>qnew</code>) if you only
  need a local Qt object inside a function (e.g. <code>QDialog</code>, <code>QRegExp</code>).
<li><b>GC</b> is implemented for Qt objects returned by the functions
 <code>qget</code> and <code>qfun</code>.
</ul>
</p>
<p>Enumeration example: <code>|Qt.AlignCenter|</code>.<br>So, all enumerations
  are defined as constants, using case preserving symbol names (allowing
  convenient tab completion in Emacs).
</p>
<p>There is no CLOS integration planned. Closures may be good enough
  sometimes <i>(understatement)</i>, see <code>mouse</code>
  in <code>examples/5-colliding-mice.lisp</code>.</p>
<p>If you're interested in <b>embedding</b> EQL in existing Qt/C++ projects,
  see the example in directory <code>Qt_EQL/</code>.
<hr>
<p>The necessary parsing for generating the <code>src/gen/*</code> files is
  done by parsing the Qt Html documentation. See <code>helper/</code>
</body>
</html>
